import React, { useEffect, useState } from 'react';

// –¢–∏–ø –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram WebApp
interface WebAppUser {
    id: number;
    first_name: string;
    last_name?: string;
    username?: string;
    language_code?: string;
    is_premium?: boolean;
    photo_url?: string;
    added_to_attachment_menu?: boolean;
}

export default function TestPage() {
    const [user, setUser] = useState<WebAppUser | null>(null);
    const [isInTelegram, setIsInTelegram] = useState<boolean>(false);
    const [error, setError] = useState<string | null>(null);

    useEffect(() => {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç—É–ø–µ–Ω –ª–∏ Telegram WebApp
        const tg = (window as never).Telegram?.WebApp;

        if (!tg) {
            setIsInTelegram(false);
            setError('–≠—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω–æ –≤–Ω—É—Ç—Ä–∏ Telegram.');
            return;
        }

        setIsInTelegram(true);

        try {
            // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω–æ, —Ç–æ–ª—å–∫–æ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è!)
            const initDataUnsafe = tg.initDataUnsafe;
            const userFromTg = initDataUnsafe?.user as WebAppUser | undefined;

            if (!userFromTg) {
                setError('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.');
                return;
            }

            setUser(userFromTg);

            // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –ø—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º—É Telegram
            tg.expand(); // —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω
            tg.ready();  // —Å–æ–æ–±—â–∞–µ–º, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ

        } catch (err) {
            setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ—Ç Telegram.');
            console.error(err);
        }
    }, []);

    if (!isInTelegram) {
        return (
            <div style={{ padding: '20px', fontFamily: 'sans-serif', color: '#333' }}>
                <h2>üö´ –í–Ω–µ Telegram</h2>
                <p>{error}</p>
                <p>–û—Ç–∫—Ä–æ–π—Ç–µ —ç—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Telegram Mini App.</p>
            </div>
        );
    }

    if (!user) {
        return (
            <div style={{ padding: '20px', fontFamily: 'sans-serif' }}>
                <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>
            </div>
        );
    }

    return (
        <div style={{ padding: '20px', fontFamily: 'sans-serif', color: '#000' }}>
            <h2>‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram</h2>
            <div style={{ display: 'flex', alignItems: 'center', gap: '16px', marginTop: '16px' }}>
                {user.photo_url && (
                    <img
                        src={user.photo_url}
                        alt="–ê–≤–∞—Ç–∞—Ä"
                        style={{ width: '64px', height: '64px', borderRadius: '50%' }}
                    />
                )}
                <div>
                    <p><strong>ID:</strong> {user.id}</p>
                    <p><strong>–ò–º—è:</strong> {user.first_name}</p>
                    {user.last_name && <p><strong>–§–∞–º–∏–ª–∏—è:</strong> {user.last_name}</p>}
                    {user.username && <p><strong>Username:</strong> @{user.username}</p>}
                    <p><strong>–Ø–∑—ã–∫:</strong> {user.language_code || '–Ω–µ —É–∫–∞–∑–∞–Ω'}</p>
                    {user.is_premium && <p>‚≠ê <strong>Premium:</strong> –¥–∞</p>}
                </div>
            </div>

            <div style={{ marginTop: '24px' }}>
                <button
                    onClick={() => {
                        (window as never).Telegram.WebApp.close();
                    }}
                    style={{
                        padding: '10px 20px',
                        backgroundColor: '#3390ec',
                        color: 'white',
                        border: 'none',
                        borderRadius: '6px',
                        cursor: 'pointer',
                    }}
                >
                    –ó–∞–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
                </button>
            </div>
        </div>
    );
}